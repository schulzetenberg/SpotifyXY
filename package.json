{
  "name": "spotifyxy",
  "version": "0.1.2",
  "description": "",
  "homepage": "http://schulzetenberg.com",
  "author": {
    "name": "Jacob Schulzetenberg",
    "email": "Jacob.Schulzetenberg@gmail.com"
  },
  "keywords": [],
  "main": "main.js",
  "private": true,
  "scripts": {
    "postinstall": "npm run postinstall:electron && npx --no-install electron-builder install-app-deps",
    "postinstall:web": "node postinstall-web",
    "postinstall:electron": "node postinstall",
    "ng": "npx --no-install -p @angular/cli ng",
    "start": "npm run postinstall:electron && npm-run-all -p ng:serve electron:serve",
    "build": "npm run postinstall:electron && npm run electron:tsc && npx --no-install -p @angular/cli ng build",
    "build:dev": "npm run build -- -c dev",
    "build:prod": "npm run build -- -c production",
    "ng:serve": "npx --no-install -p @angular/cli ng serve",
    "ng:serve:web": "npm run postinstall:web && npx --no-install -p @angular/cli ng serve -o",
		"electron:tsc": "npx --no-install -p typescript tsc main.ts",
		"electron:serve": "wait-on http-get://localhost:4200/ && npm run electron:tsc && electron . --serve",
    "electron:local": "npm run build:prod && electron .",
    "electron:package": "npm run build && npm run electron:mac && npm run-script electron:linux && npm run-script electron:windows",
    "electron:linux": "npm run build:prod && npx --no-install electron-builder build --linux",
    "electron:windows": "npm run build:prod && npx --no-install electron-builder build --windows",
    "electron:mac": "npm run build:prod && npx --no-install electron-builder build --mac",
    "test": "npm run postinstall:web && npx --no-install -p @angular/cli ng test",
    "e2e": "npm run postinstall:web && npx --no-install -p @angular/cli ng e2e"
  },
  "dependencies": {
    "bootstrap": "4.3.1",
    "electron-oauth2": "3.0.0",
    "electron-store": "2.0.0",
    "fs-extra": "7.0.1",
    "jquery": "3.3.1",
    "lodash": "4.17.10",
    "material-design-icons": "3.0.1",
    "popper.js": "1.14.3",
    "q": "1.5.1",
    "requestretry": "1.13.0",
    "winston": "3.0.0"
  },
  "devDependencies": {
    "@angular-devkit/build-angular": "0.6.3",
    "@angular/animations": "6.0.5",
    "@angular/cdk": "6.4.0",
    "@angular/cli": "6.0.5",
    "@angular/common": "6.0.5",
    "@angular/compiler": "6.0.5",
    "@angular/compiler-cli": "6.0.5",
    "@angular/core": "6.0.5",
    "@angular/forms": "6.0.5",
    "@angular/http": "6.0.5",
    "@angular/language-service": "6.0.5",
    "@angular/material": "6.4.0",
    "@angular/platform-browser": "6.0.5",
    "@angular/platform-browser-dynamic": "6.0.5",
    "@angular/router": "6.0.5",
    "@ngx-translate/core": "10.0.1",
    "@ngx-translate/http-loader": "3.0.1",
    "@types/jasmine": "2.8.7",
    "@types/jasminewd2": "2.0.3",
    "@types/node": "8.9.4",
    "codelyzer": "5.2.1",
    "core-js": "2.5.6",
    "electron": "2.0.3",
    "electron-builder": "20.14.7",
    "electron-reload": "1.5.0",
    "htmlhint": "0.9.13",
    "husky": "2.2.0",
    "jasmine-core": "3.1.0",
    "jasmine-spec-reporter": "4.2.1",
    "js-beautify": "1.10.0",
    "karma": "2.0.2",
    "karma-chrome-launcher": "2.2.0",
    "karma-coverage-istanbul-reporter": "2.0.0",
    "karma-jasmine": "1.1.2",
    "karma-jasmine-html-reporter": "1.1.0",
    "lint-staged": "8.1.6",
    "ngx-electron": "1.0.4",
    "node-sass": "4.13.1",
    "npm-run-all": "4.1.5",
    "prettier": "1.17.0",
    "protractor": "5.3.2",
    "rxjs": "6.1.0",
    "rxjs-compat": "6.2.2",
    "stylelint": "9.3.0",
    "stylelint-config-standard": "18.2.0",
    "ts-node": "6.0.3",
    "tslint": "5.10.0",
    "tslint-angular": "3.0.2",
    "tslint-config-airbnb": "5.11.1",
    "tslint-config-prettier": "1.18.0",
    "typescript": "2.7.2",
    "wait-on": "4.0.0",
    "webdriver-manager": "12.0.6",
    "zone.js": "0.8.26"
  },
  "lint-staged": {
    "*.ts": [
      "tslint --project tsconfig.json -e 'src/test/**'",
      "git add"
    ],
    "*.html": [
      "htmlhint --config .htmlhintrc",
      "js-beautify --config .jsbeautifyrc --type html -r",
      "git add"
    ],
    "*.scss": [
      "stylelint --syntax=scss"
    ],
    "src/**/*.{ts,css,scss}": [
      "prettier --write",
      "git add"
    ]
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged"
    }
  }
}
