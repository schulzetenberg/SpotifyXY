{
  "name": "spotifyxy",
  "version": "0.1.2",
  "description": "",
  "homepage": "http://schulzetenberg.com",
  "author": {
    "name": "Jacob Schulzetenberg",
    "email": "Jacob.Schulzetenberg@gmail.com"
  },
  "keywords": [],
  "main": "main.js",
  "private": true,
  "scripts": {
    "postinstall": "npm run postinstall:electron && npx --no-install electron-builder install-app-deps",
    "postinstall:web": "node postinstall-web",
    "postinstall:electron": "node postinstall",
    "ng": "npx --no-install -p @angular/cli ng",
    "start": "npm run postinstall:electron && npm-run-all -p ng:serve electron:serve",
    "build": "npm run postinstall:electron && npm run electron:tsc && npx --no-install -p @angular/cli ng build",
    "build:dev": "npm run build -- -c dev",
    "build:prod": "npm run build -- -c production",
    "ng:serve": "npx --no-install -p @angular/cli ng serve",
    "ng:serve:web": "npm run postinstall:web && npx --no-install -p @angular/cli ng serve -o",
    "electron:tsc": "npx --no-install -p typescript tsc main.ts",
    "electron:serve": "wait-on http-get://localhost:4200/ && npm run electron:tsc && electron . --serve",
    "electron:local": "npm run build:prod && electron .",
    "electron:package": "npm run build && npm run electron:mac && npm run-script electron:linux && npm run-script electron:windows",
    "electron:linux": "npm run build:prod && npx --no-install electron-builder build --linux",
    "electron:windows": "npm run build:prod && npx --no-install electron-builder build --windows",
    "electron:mac": "npm run build:prod && npx --no-install electron-builder build --mac",
    "test": "npm run postinstall:web && npx --no-install -p @angular/cli ng test",
    "e2e": "npm run postinstall:web && npx --no-install -p @angular/cli ng e2e"
  },
  "dependencies": {
    "bootstrap": "4.4.1",
    "electron-oauth2": "3.0.0",
    "electron-store": "5.1.0",
    "fs-extra": "8.1.0",
    "jquery": "3.4.1",
    "lodash": "4.17.15",
    "material-design-icons": "3.0.1",
    "popper.js": "1.16.1",
    "q": "1.5.1",
    "requestretry": "4.1.0",
    "winston": "3.2.1"
  },
  "devDependencies": {
    "@angular-devkit/build-angular": "0.900.1",
    "@angular/animations": "9.0.0",
    "@angular/cdk": "9.0.0",
    "@angular/cli": "9.0.0",
    "@angular/common": "9.0.0",
    "@angular/compiler": "9.0.0",
    "@angular/compiler-cli": "9.0.0",
    "@angular/core": "9.0.0",
    "@angular/forms": "9.0.0",
    "@angular/http": "7.2.16",
    "@angular/language-service": "9.0.0",
    "@angular/material": "9.0.0",
    "@angular/platform-browser": "9.0.0",
    "@angular/platform-browser-dynamic": "9.0.0",
    "@angular/router": "9.0.0",
    "@ngx-translate/core": "12.0.0",
    "@ngx-translate/http-loader": "4.0.0",
    "@types/jasmine": "3.5.3",
    "@types/jasminewd2": "2.0.8",
    "@types/node": "12.12.6",
    "codelyzer": "5.2.1",
    "core-js": "3.6.4",
    "electron": "8.0.0",
    "electron-builder": "22.3.2",
    "electron-reload": "1.5.0",
    "htmlhint": "0.11.0",
    "husky": "4.2.1",
    "jasmine-core": "3.5.0",
    "jasmine-spec-reporter": "4.2.1",
    "js-beautify": "1.10.3",
    "karma": "6.3.14",
    "karma-chrome-launcher": "3.1.0",
    "karma-coverage-istanbul-reporter": "2.1.1",
    "karma-jasmine": "3.1.1",
    "karma-jasmine-html-reporter": "1.5.2",
    "lint-staged": "10.0.7",
    "ngx-electron": "2.2.0",
    "node-sass": "4.13.1",
    "npm-run-all": "4.1.5",
    "prettier": "1.19.1",
    "protractor": "5.4.3",
    "rxjs": "6.5.4",
    "rxjs-compat": "6.5.4",
    "stylelint": "13.1.0",
    "stylelint-config-standard": "20.0.0",
    "ts-node": "8.6.2",
    "tslint": "6.0.0",
    "tslint-angular": "3.0.2",
    "tslint-config-airbnb": "5.11.2",
    "tslint-config-prettier": "1.18.0",
    "typescript": "3.7.5",
    "wait-on": "4.0.0",
    "webdriver-manager": "12.1.7",
    "zone.js": "0.10.2"
  },
  "lint-staged": {
    "*.ts": [
      "tslint --project tsconfig.json -e 'src/test/**'",
      "git add"
    ],
    "*.html": [
      "htmlhint --config .htmlhintrc",
      "js-beautify --config .jsbeautifyrc --type html -r",
      "git add"
    ],
    "*.scss": [
      "stylelint --syntax=scss"
    ],
    "src/**/*.{ts,css,scss}": [
      "prettier --write",
      "git add"
    ]
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged"
    }
  }
}
